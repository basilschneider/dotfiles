# Directory for storing ncmpcpp related files. Changing it is useful if you want
# to store everything somewhere else and provide command line setting for
# alternative location to config file which defines that while launching
# ncmpcpp.
ncmpcpp_directory = ~/.ncmpcpp

# Directory for storing downloaded lyrics. It defaults to ~/.lyrics since other
# MPD clients (eg. ncmpc) also use that location.
lyrics_directory = ~/.lyrics

# Connect to MPD running on specified host/unix socket. When HOST starts with a
# '/', it is assumed to be a unix socket.
mpd_host = localhost

# Search for files in specified directory. This is needed for tag editor to
# work.
mpd_music_dir = ~/Music

# Connect to MPD on the specified port.
mpd_port = 6600

## Set connection timeout to MPD to given value.
#mpd_connection_timeout = SECONDS

## Default number of seconds to crossfade, if enabled by ncmpcpp.
#mpd_crossfade_time = SECONDS

# Should be set to 'yes', if fifo output's format was set to 44100:16:2.
visualizer_in_stereo = "yes"

# Path to mpd fifo output. This is needed to make music visualizer work (note
# that output sound format of this fifo has to be either 44100:16:1 or
# 44100:16:2, depending on whether you want mono or stereo visualization)
visualizer_fifo_path = "/tmp/mpd.fifo"

# Name of output that provides data for visualizer. Needed to keep sound and
# visualization in sync.
visualizer_output_name = "FIFO"

## Multiply received samples by given value. Very useful for proper visualization
## of quiet music.
#visualizer_sample_multiplier = NUMBER

# Defines interval between syncing visualizer and audio outputs.
#visualizer_sync_interval = "1"

# Defines default visualizer type (spectrum is available only if ncmpcpp was
# compiled with fftw support).
visualizer_type = "spectrum" (spectrum/wave)

## Defines visualizer's look (string has to be exactly 2 characters long: first
## one is for wave whereas second for frequency spectrum).
#visualizer_look = STRING

## If you use encoding other than utf8, set it in order to handle utf8 encoded
## strings properly.
#system_encoding = ENCODING

## Base seek time to begin with.
#seek_time = SECONDS

## Number of percents volume has to be increased/decreased by in
## volume_up/volume_down.
#volume_change_step = NUMBER

## Delay for highlighting playlist since the last key was pressed. If set to 0,
## highlighting never fades away.
#playlist_disable_highlight_delay = SECONDS

## Delay for displayed messages to remain visible.
#message_delay_time = SECONDS

## Format for songs' list.
#song_list_format

## Format for songs' list displayed in columns.
#song_columns_list_format

## Song's format for statusbar.
#song_status_format

## Format for songs in Media library.
#song_library_format

## Format for albums' list in Tag editor.
#tag_editor_album_format

## Song format for window title.
#song_window_title_format

## Determines sort mode for browser. Possible values are "name", "mtime",
## "format" and "noop".
#browser_sort_mode

## Format to use for sorting songs in browser. For this option to be effective,
## browser_sort_mode must be set to "format".
#browser_sort_format

## Path to external editor used to edit lyrics.
#external_editor = PATH

## Prefix for playlists in Browser.
#browser_playlist_prefix = TEXT

## Default pattern used by Tag editor's parser.
#default_tag_editor_pattern = TEXT

## Prefix for currently playing song.
#now_playing_prefix = TEXT

## Suffix for currently playing song.
#now_playing_suffix = TEXT

## Prefix for selected items.
#selected_item_prefix = TEXT

## Suffix for selected items.
#selected_item_suffix = TEXT

## Prefix for modified item (tag editor).
#modified_item_prefix = TEXT

## Now playing song format for the first line in alternative user interface
## header window.
#alternative_header_first_line_format = TEXT

## Now playing song format for the second line in alternative user interface
## header window.
#alternative_header_second_line_format = TEXT

## One of colors used in Song info, Tiny tag editor and Search engine.
#color1 = COLOR

## One of colors used in Song info, Tiny tag editor and Search engine.
#color2 = COLOR

## No need to describe it, huh?
#colors_enabled = yes/no

## If enabled, text in header window will scroll if its length is longer then
## actual screen width, otherwise it won't.
#header_text_scrolling = yes/no

## If enabled, cyclic scrolling is used (e.g. if you press down arrow being at
## the end of list, it'll take you to the beginning)
#cyclic_scrolling = yes/no

## If enabled, mouse wheel will scroll the whole page of item list at a time,
## otherwise the number of lines specified by lines_scrolled variable.
#mouse_list_scroll_whole_page = yes/no

## Number of lines that are scrolled with mouse wheel.
#lines_scrolled = NUMBER

## Number of default mode used in search engine.
#search_engine_default_search_mode = MODE_NUMBER

## If enabled, time remaining to end of playlist will be shown after playlist's
## statistics.
#playlist_show_remaining_time = yes/no

## If enabled, total/remaining playlist time displayed in statusbar will be shown
## using shortened units' names (d:h:m:s instead of days:hours:minutes:seconds).
#playlist_shorten_total_times = yes/no

## If enabled, separators will be placed between albums.
#playlist_separate_albums = yes/no

## Default display mode for Playlist.
#playlist_display_mode = classic/columns

## Default display mode for Browser.
#browser_display_mode = classic/columns

## Default display mode for Search engine.
#search_engine_display_mode = classic/columns

## Default display mode for Playlist editor.
#playlist_editor_display_mode = classic/columns

## Indicates whether custom colors of tags have to be discarded if item is
## selected or not.
#discard_colors_if_item_is_selected = yes/no

## If enabled, header window will be displayed, otherwise hidden.
#header_visibility = yes/no

## If enabled, statusbar will be displayed, otherwise hidden.
#statusbar_visibility = yes/no

## If enabled, column titles will be displayed, otherwise hidden.
#titles_visibility = yes/no

## Default state for autocenter mode at start.
#autocenter_mode = yes/no

## If enabled, currently highlighted position in the list will be always
## centered.
#centered_cursor = yes/no

## This variable defines the look of progressbar. Note that it has to be exactly
## two or three characters long.
#progressbar_look = TEXT

## This variable defines whether progressbar should be displayed in bold or not.
#progressbar_boldness = yes/no

## If set to "wrapped", going from last found position to next will take you to
## the first one (same goes for the first position and going to previous one),
## otherwise no actions will be performed.
#default_find_mode = wrapped/normal

## If set to "select", space will select items instead of adding them to playlist
## (although selecting by space is default and the only one action for space in
## Playlist).
#default_space_mode = select/add

## If enabled, seek time will increment by one each second of seeking.
#incremental_seeking = yes/no

## If enabled, lyrics will be switched at song's change to currently playing
## one's (Note: this works only if you are viewing lyrics of item from Playlist).
#follow_now_playing_lyrics = yes/no

## If enabled, each time song changes lyrics fetcher will be automatically run in
## background in attempt to download lyrics for currently playing song.
#fetch_lyrics_for_current_song_in_background = yes/no

## If enabled, lyrics will be saved in song's directory, otherwise in ~/.lyrics.
## Note that it needs properly set mpd_music_dir.
#store_lyrics_in_song_dir = yes/no

## If set to yes, filenames generated by ncmpcpp (with tag editor, for lyrics,
## artists etc.) will not contain the following characters: \?*:|"<> - otherwise
## only slash (/) will not be used.
#generate_win32_compatible_filenames = yes/no

## If set to yes, it will be possible to physically delete files and directories
## from the disk in the browser.
#allow_for_physical_item_deletion = yes/no

## If set, ncmpcpp will try to get info from last.fm in language you set and if
## it fails, it will fall back to english. Otherwise it will use english the
## first time.
#lastfm_preferred_language = ISO 639 alpha-2 language code

## If set to add_remove, pressing space on item which is already in playlist will
## remove it, otherwise add it again.
#space_add_mode = add_remove/always_add

## Trigger for displaying in local browser files and directories that begin with
## '.'
#show_hidden_files_in_local_browser = yes/no

## If set to "playlist", Search engine will perform searching in current MPD
## playlist rather than in music database.
#default_place_to_search_in = database/playlist

## If enabled, screens' names and their keybindings will be shown in header
## window until key is pressed, otherwise they won't be displayed at all.
#display_screens_numbers_on_start = yes/no

## If set to "previous", key_screen_switcher will switch between current and last
## used screen. If set to "screen1,...screenN" (a list of screens) it will switch
## between them in a sequence. Syntax clarification can be found in example
## config file.
#screen_switcher_mode = SWITCHER_MODE

## Screen that has to be displayed at start (playlist by default).
#startup_screen = SCREEN_NAME

## If you want to lock a screen, ncmpcpp asks for % of locked screen's width to
## be reserved before that and provides a default value, which is the one you can
## set here.
#locked_screen_width_part = 20-80

## If enabled, ncmpcpp will ask for % of locked screen's width each time you want
## to lock a screen. If you disable that, it'll silently attempt to use default
## value.
#ask_for_locked_screen_width_part = yes/no

## If enabled, ncmpcpp will jump at start to now playing song if mpd is playing
## or paused.
#jump_to_now_playing_song_at_start = yes/no

## If enabled, user will be asked if he really wants to clear the playlist after
## pressing key responsible for that.
#ask_before_clearing_playlists = yes/no

## If enabled, clock will display time in format hh:mm:ss, otherwise hh:mm.
#clock_display_seconds = yes/no

## If enabled, volume level will be displayed in statusbar, otherwise not.
#display_volume_level = yes/no

## If enabled, bitrate of currently playing song will be displayed in statusbar.
#display_bitrate = yes/no

## If enabled, remaining time of currently playing song will be be displayed in
## statusbar instead of elapsed time.
#display_remaining_time = yes/no

## If enabled, word "the" at the beginning of tags/filenames/sort format will be
## ignored while sorting items.
#ignore_leading_the = yes/no

## If your external editor is console application, you need to enable it.
#use_console_editor = yes/no

## If enabled, fields in Search engine above "Reset" button will be blocked after
## successful searching, otherwise they won't.
#block_search_constraints_change_if_items_found = yes/no

## Self-descriptive, isn't it?
#mouse_support = yes/no

## If enabled, tag editor will number tracks using format xx/yy (where xx is the
## current track and yy is total amount of all numbered tracks), not plain xx.
#tag_editor_extended_numeration = yes/no

## If enabled, ncmpcpp will override current window title with its own one.
#enable_window_title = yes/no

## Type of currently used regular expressions.
#regular_expressions = basic/extended

## Default user interface used by ncmpcpp at start.
#user_interface = classic/alternative

## If enabled, there will be a 250ms delay between refreshing position in media
## library or playlist editor and fetching appropriate data from MPD. This limits
## data fetched from the server and is particularly useful if ncmpcpp is
## connected to a remote host.
#data_fetching_delay = yes/no

## Default tag type for leftmost column in media library.
#media_library_primary_tag = artist/date/genre/composer/performer

## Text that will be displayed, if requested tag is not set.
#empty_tag_marker = TEXT

## Separator that is placed between tags. Also interpreted by tag editor which
## splits input string into separate tags using it.
#tags_separator = TEXT

# Color of empty tag marker.
empty_tag_color = yellow

# Color of header window.
header_window_color = cyan

# Color of volume state.
volume_color = yellow

# Color of lines separating header and statusbar from main window.
state_line_color = blue

# Color of MPD status flags.
state_flags_color = red

# Color of main window.
main_window_color = green

# Color of main window's highlight.
main_window_highlight_color = cyan

# Color of progressbar.
progressbar_color = black

# Color of part of progressbar that represents elapsed time.
progressbar_elapsed_color = magenta

# Color of statusbar.
statusbar_color = cyan

# Color of separators used in alternative user interface.
alternative_ui_separator_color = magenta

# Color of active column's highlight.
active_column_color = white

# Color of visualization.
visualizer_color = cyan

# Color of active window's border.
active_window_border = yellow

# Colors
# black
# red
# green
# yellow
# blue
# magenta
# cyan
# white
