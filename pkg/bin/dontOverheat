#!/usr/bin/env bash

### Monitors the most active process (in terms of CPU usage) and pauses it for some time if system overheats

temperatureOverheat=85
timeSleep=5

### When the user hits Ctrl+c, continue the last process (nothing happens if this process wasn't stopped before)
trap 'kill -CONT "$pid"; echo "Bye."; exit' SIGINT

### Defining colors
red=$(tput setaf 1)
normal=$(tput sgr0)

printf "%s\n" "Starting dontOverheat script. Temperature threshold is set to ${temperatureOverheat} °C and sleep timer is set to ${timeSleep} seconds."

### Loop forever, user must hit Ctrl+c to quit
while true; do
    top=$(top -bn1 | awk 'NR==8 { print }')
    process=$(awk '{ print $12 }' <<< "$top")
    pid=$(awk '{ print $1 }' <<< "$top")
    cpu=$(awk '{ print $9 }' <<< "$top")
    temperature=$(acpi -t | sed 's/Thermal 0:[^0-9]*//; s/ degrees C//')
    printf "%s"   "Most active process: "
    printf "%20s" "$process"
    printf "%s"   " - Process ID: "
    printf "%5s"  "$pid"
    printf "%s"   " - CPU Usage: "
    printf "%7s"  "$cpu %"
    printf "%s"   " - Temperature: "
    printf "%9s"  "$temperature °C"
    printf "%b\n"
    if [[ "$temperature" > "$temperatureOverheat" ]]; then
        printf "%s" "${red}Temperature above threshold of ${temperatureOverheat} °C. "
        printf "%s" "Putting process ${process} with PID ${pid} to sleep for ${timeSleep} seconds.${normal}"
        sudo kill -STOP "$pid" && sleep 3 && sudo kill -CONT "$pid" && printf "%s\n" " Continuing ..." \
            || printf "%s\n" " Uh, something went wrong while trying to put the process to sleep. Probably I got the wrong one?"
    fi
    sleep 1
done

